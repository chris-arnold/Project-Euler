/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2 the first 10 terms will be 

1, 2, 3, 5, 8, 12, 21, 34, 55, 89, ....

By considering the terms in the Fibonacci sequence whose values do not exceed 4 million, find the sum of the even-valued terms.
*/

#include <iostream>

using namespace std;

int main()
{
	unsigned long long current, previous1, previous2, sum;
	sum = 0; current = 1; previous1 = 0; previous2 = 0;

	while (current < 4000000)
	{
		if(current == 1)
		{
			previous1 = current;
			current = 2;
			sum += current;
		}
		else
		{
		previous2 = previous1; previous1 = current; 
		current = previous1 + previous2;
		cout << current << endl;
		if ((current < 4000000) && (current % 2 == 0))
			sum += current;
		}
	}

	cout << "Problem is: "
		<< endl << " By considering the terms in the Fibonacci sequence whose values do not exceed 4 million, find the sum of the even-valued terms. "
		<< endl << "Result is: " << endl
		<< sum << endl;

	return 0;
};
